# Requires magick R Package https://github.com/ropensci/magick
# Useful error message for logo position
if (!logo_position %in% c("top right", "top left", "bottom right", "bottom left")) {
stop("Error Message: Uh oh! Logo Position not recognized\n  Try: logo_positon = 'top left', 'top right', 'bottom left', or 'bottom right'")
}
# read in raw images
plot <- magick::image_read(plot_path)
logo_raw <- magick::image_read(logo_path)
# get dimensions of plot for scaling
plot_height <- magick::image_info(plot)$height
plot_width <- magick::image_info(plot)$width
# default scale to 1/10th width of plot
# Can change with logo_scale
logo <- magick::image_scale(logo_raw, as.character(plot_width/logo_scale))
# Get width of logo
logo_width <- magick::image_info(logo)$width
logo_height <- magick::image_info(logo)$height
# Set position of logo
# Position starts at 0,0 at top left
# Using 0.01 for 1% - aesthetic padding
if (logo_position == "top right") {
x_pos = plot_width - logo_width - 0.01 * plot_width
y_pos = 0.01 * plot_height
} else if (logo_position == "top left") {
x_pos = 0.01 * plot_width
y_pos = 0.01 * plot_height
} else if (logo_position == "bottom right") {
x_pos = plot_width - logo_width - 0.01 * plot_width
y_pos = plot_height - logo_height - 0.01 * plot_height
} else if (logo_position == "bottom left") {
x_pos = 0.01 * plot_width
y_pos = plot_height - logo_height - 0.01 * plot_height
}
# Compose the actual overlay
magick::image_composite(plot, logo, offset = paste0("+", x_pos, "+", y_pos))
}
epl_squad_stats_MD21_2_raw <- read_csv(here::here("data/epl_squad_stats_MD21_2.csv"),
skip = 1, col_names = TRUE)
epl_squad_stats_MD21_2_raw <- read_csv(here::here("data/epl_squad_stats_MD21_2.csv"),
skip = 1, col_names = TRUE)
epl_squad_stats_MD21_2 <- epl_squad_stats_MD21_2_raw %>%
rename_at(vars(12:16),
~ glue::glue("{colnames(epl_squad_stats_MD21_2_raw)[12:16]}_p90")) %>%
rename_at(vars(20:24),
~ glue::glue("{colnames(epl_squad_stats_MD21_2_raw)[20:24]}_p90"))
epl_squad_stats_MD21_2 <- epl_squad_stats_MD21_2 %>%
rename_at(vars(2:24), ~ glue::glue("{colnames(epl_squad_stats_MD21_2)[2:24]}_squad")) %>%
rename_at(vars(contains("_1")), ~ str_replace(., "_1", ""))
epl_squad_stats_MD21_2_raw
epl_squad_stats_MD21_2
epl_squad_stats_MD21_2_raw <- read_csv(here::here("data/epl_squad_stats_MD21_2.csv"),
skip = 1, col_names = TRUE)
epl_squad_stats_MD21_2 <- epl_squad_stats_MD21_2_raw %>%
rename_at(vars(12:16),
~ glue::glue("{colnames(epl_squad_stats_MD21_2_raw)[12:16]}_p90")) %>%
rename_at(vars(20:24),
~ glue::glue("{colnames(epl_squad_stats_MD21_2_raw)[20:24]}_p90"))
epl_squad_stats_MD21_2 <- epl_squad_stats_MD21_2 %>%
rename_at(vars(2:24), ~ glue::glue("{colnames(epl_squad_stats_MD21_2)[2:24]}_squad")) %>%
rename_at(vars(contains("_1")), ~ str_replace(., "_1", ""))
pacman::p_load(tidyverse, polite, scales, ggimage,
ggforce, ggtext,
rvest, glue, extrafont, ggrepel, magick)
loadfonts()
add_logo <- function(plot_path, logo_path, logo_position, logo_scale = 10){
# Requires magick R Package https://github.com/ropensci/magick
# Useful error message for logo position
if (!logo_position %in% c("top right", "top left", "bottom right", "bottom left")) {
stop("Error Message: Uh oh! Logo Position not recognized\n  Try: logo_positon = 'top left', 'top right', 'bottom left', or 'bottom right'")
}
# read in raw images
plot <- magick::image_read(plot_path)
logo_raw <- magick::image_read(logo_path)
# get dimensions of plot for scaling
plot_height <- magick::image_info(plot)$height
plot_width <- magick::image_info(plot)$width
# default scale to 1/10th width of plot
# Can change with logo_scale
logo <- magick::image_scale(logo_raw, as.character(plot_width/logo_scale))
# Get width of logo
logo_width <- magick::image_info(logo)$width
logo_height <- magick::image_info(logo)$height
# Set position of logo
# Position starts at 0,0 at top left
# Using 0.01 for 1% - aesthetic padding
if (logo_position == "top right") {
x_pos = plot_width - logo_width - 0.01 * plot_width
y_pos = 0.01 * plot_height
} else if (logo_position == "top left") {
x_pos = 0.01 * plot_width
y_pos = 0.01 * plot_height
} else if (logo_position == "bottom right") {
x_pos = plot_width - logo_width - 0.01 * plot_width
y_pos = plot_height - logo_height - 0.01 * plot_height
} else if (logo_position == "bottom left") {
x_pos = 0.01 * plot_width
y_pos = plot_height - logo_height - 0.01 * plot_height
}
# Compose the actual overlay
magick::image_composite(plot, logo, offset = paste0("+", x_pos, "+", y_pos))
}
epl_squad_stats_MD21_2_raw <- read_csv(here::here("data/epl_squad_stats_MD21_2.csv"),
skip = 1, col_names = TRUE)
epl_squad_stats_MD21_2 <- epl_squad_stats_MD21_2_raw %>%
rename_at(vars(12:16),
~ glue::glue("{colnames(epl_squad_stats_MD21_2_raw)[12:16]}_p90")) %>%
rename_at(vars(20:24),
~ glue::glue("{colnames(epl_squad_stats_MD21_2_raw)[20:24]}_p90"))
epl_squad_stats_MD21_2 <- epl_squad_stats_MD21_2 %>%
rename_at(vars(2:24), ~ glue::glue("{colnames(epl_squad_stats_MD21_2)[2:24]}_squad")) %>%
rename_at(vars(contains("_1")), ~ str_replace(., "_1", ""))
View(epl_squad_stats_MD21_2)
rlang::last_error()
pacman::p_load(tidyverse, polite, scales, ggimage,
ggforce, ggtext,
rvest, glue, extrafont, ggrepel, magick)
loadfonts()
add_logo <- function(plot_path, logo_path, logo_position, logo_scale = 10){
# Requires magick R Package https://github.com/ropensci/magick
# Useful error message for logo position
if (!logo_position %in% c("top right", "top left", "bottom right", "bottom left")) {
stop("Error Message: Uh oh! Logo Position not recognized\n  Try: logo_positon = 'top left', 'top right', 'bottom left', or 'bottom right'")
}
# read in raw images
plot <- magick::image_read(plot_path)
logo_raw <- magick::image_read(logo_path)
# get dimensions of plot for scaling
plot_height <- magick::image_info(plot)$height
plot_width <- magick::image_info(plot)$width
# default scale to 1/10th width of plot
# Can change with logo_scale
logo <- magick::image_scale(logo_raw, as.character(plot_width/logo_scale))
# Get width of logo
logo_width <- magick::image_info(logo)$width
logo_height <- magick::image_info(logo)$height
# Set position of logo
# Position starts at 0,0 at top left
# Using 0.01 for 1% - aesthetic padding
if (logo_position == "top right") {
x_pos = plot_width - logo_width - 0.01 * plot_width
y_pos = 0.01 * plot_height
} else if (logo_position == "top left") {
x_pos = 0.01 * plot_width
y_pos = 0.01 * plot_height
} else if (logo_position == "bottom right") {
x_pos = plot_width - logo_width - 0.01 * plot_width
y_pos = plot_height - logo_height - 0.01 * plot_height
} else if (logo_position == "bottom left") {
x_pos = 0.01 * plot_width
y_pos = plot_height - logo_height - 0.01 * plot_height
}
# Compose the actual overlay
magick::image_composite(plot, logo, offset = paste0("+", x_pos, "+", y_pos))
}
epl_squad_stats_MD21_2_raw <- read_csv(here::here("data/epl_squad_stats_MD21_2.csv"),
skip = 1, col_names = TRUE)
epl_squad_stats_MD21_2 <- epl_squad_stats_MD21_2_raw %>%
rename_at(vars(12:16),
~ glue::glue("{colnames(epl_squad_stats_MD21_2_raw)[12:16]}_p90")) %>%
rename_at(vars(20:24),
~ glue::glue("{colnames(epl_squad_stats_MD21_2_raw)[20:24]}_p90"))
epl_squad_stats_MD21_2_new <- epl_squad_stats_MD21_2 %>%
rename_at(vars(2:24), ~ glue::glue("{colnames(epl_squad_stats_MD21_2)[2:24]}_squad")) %>%
rename_at(vars(contains("_1")), ~ str_replace(., "_1", ""))
epl_squad_stats_MD21_2_raw <- read_csv(here::here("data/epl_squad_stats_MD21_2.csv"),
skip = 1, col_names = TRUE)
epl_squad_stats_MD21_2 <- epl_squad_stats_MD21_2_raw %>%
rename_at(vars(12:16),
~ glue::glue("{colnames(epl_squad_stats_MD21_2_raw)[12:16]}_p90")) %>%
rename_at(vars(20:24),
~ glue::glue("{colnames(epl_squad_stats_MD21_2_raw)[20:24]}_p90"))
epl_squad_stats_MD21_2 <- epl_squad_stats_MD21_2 %>%
rename_at(vars(2:24), ~ glue::glue("{colnames(epl_squad_stats_MD21_2)[2:24]}_squad")) %>%
rename_at(vars(contains("_1")), ~ str_replace(., "_1", ""))
?rename_at
pacman::p_load(tidyverse, polite, scales, ggimage, rvest,
glue, extrafont, showtext, ggrepel, magick,
ggforce, ggtext, lubridate,
cowplot, patchwork, rlang)
loadfonts(quiet = TRUE)
get_team_links <- function(season) {
url <- "https://www.transfermarkt.com/bundesliga/startseite/wettbewerb/L1/plus/?saison_id={season}"
session <- bow(url)
team_links <- scrape(session) %>%
html_nodes("#yw1 > table > tbody > tr > td.zentriert.no-border-rechts > a") %>%
html_attr("href")
# season <- enquo(season)
team_links_df <- team_links %>%
enframe(name = NULL) %>%
separate(value, c(NA, "team_name", NA, NA, "team_num", NA, NA), sep = "/") %>%
mutate(link = glue("https://www.transfermarkt.com/{team_name}/leistungsdaten/verein/{team_num}/reldata/%26{season}/plus/1"),
season = season)
}
team_links_df <- get_team_links(season = 2019)
glimpse(team_links_df)
View(team_links_df)
?glue
get_team_links <- function(season) {
url <- "https://www.transfermarkt.com/major-league-soccer/startseite/wettbewerb/MLS1/plus/?saison_id={season}"
session <- bow(url)
team_links <- scrape(session) %>%
html_nodes("#yw1 > table > tbody > tr > td.zentriert.no-border-rechts > a") %>%
html_attr("href")
# season <- enquo(season)
team_links_df <- team_links %>%
enframe(name = NULL) %>%
separate(value, c(NA, "team_name", NA, NA, "team_num", NA, NA), sep = "/") %>%
mutate(link = glue("https://www.transfermarkt.com/{team_name}/leistungsdaten/verein/{team_num}/reldata/%26{season}/plus/1"),
season = season)
}
get_team_links <- function(season) {
url <- "https://www.transfermarkt.com/bundesliga/startseite/wettbewerb/L1/plus/?saison_id={season}"
session <- bow(url)
team_links <- scrape(session) %>%
html_nodes("#yw1 > table > tbody > tr > td.zentriert.no-border-rechts > a") %>%
html_attr("href")
# season <- enquo(season)
team_links_df <- team_links %>%
enframe(name = NULL) %>%
separate(value, c(NA, "team_name", NA, NA, "team_num", NA, NA), sep = "/") %>%
mutate(link = glue("https://www.transfermarkt.com/{team_name}/leistungsdaten/verein/{team_num}/reldata/%26{season}/plus/1"),
season = season)
}
team_links_df <- get_team_links(season = 2019)
glimpse(team_links_df)
team_links_df["link"][1]
View(team_links_df)
View(team_links_df)
View(team_links_df)
buli_age_utility_info <- function(team_name, team_num, season, total_minutes) {
## get age + minutes played
session <- bow(glue::glue("https://www.transfermarkt.com/{team_name}/leistungsdaten/verein/{team_num}/plus/1?reldata=L1%26{season}/"))
# grab name from photo element instead
result_name <- scrape(session) %>%
html_nodes("#yw1 .bilderrahmen-fixed") %>%
html_attr("title")
# grab age
result_age <- scrape(session) %>%
html_nodes(".posrela+ .zentriert") %>%
html_text()
# grab minutes played in league
result_mins <- scrape(session) %>%
html_nodes("td.rechts") %>%
html_text()
## get length
session <- bow(glue::glue("https://www.transfermarkt.com/{team_name}/kader/verein/{team_num}/saison_id/{season}/plus/1"))
result_name2 <- scrape(session) %>%
html_nodes("#yw1 .bilderrahmen-fixed") %>%
html_attr("title")
result_bday <- scrape(session) %>%
html_nodes(".posrela+ .zentriert") %>%
html_text()
result_joinedteam <- scrape(session) %>%
html_nodes("td:nth-child(7)") %>%
html_text()
result_leaveteam <- scrape(session) %>%
html_nodes("td:nth-child(9)") %>%
html_text()
# place each vector into list
resultados <- list(result_name, result_age, result_mins)
col_name <- c("name", "age", "minutes")
results_comb <- resultados %>%
reduce(cbind) %>%
as_tibble() %>%
set_names(col_name)
## join + bday
resultados2 <- list(result_name2, result_bday,
result_joinedteam, result_leaveteam)
col_name2 <- c("name", "bday", "join", "leave")
results_comb2 <- resultados2 %>%
reduce(cbind) %>%
as_tibble() %>%
set_names(col_name2)
## combine BOTH
results_comb <- results_comb %>%
left_join(results_comb2)
# fix "strings" into proper formats, calculate % of minutes appeared
all_team_minutes <- results_comb %>%
mutate(age = as.numeric(age),
minutes = minutes %>%
str_replace("\\.", "") %>%
str_replace("'", "") %>%
as.numeric(),
min_perc = (minutes / total_minutes) %>% round(digits = 3),
bday = str_replace_all(bday, "\\(.*\\)", "") %>% mdy(),
join = join %>% mdy(),
join_age = interval(bday, join) / years(1),
age_now = interval(bday, Sys.Date()) / years(1)) %>%
filter(!is.na(minutes)) %>%
separate(name, into = c("first_name", "last_name"),
sep = " ", fill = "left") %>%
mutate(
fname = if_else(!is.na(first_name),
str_extract(first_name, "[A-Z]{1}"),
""),
player = case_when(
!is.na(first_name) ~ glue("{fname}. {last_name}"),
TRUE ~ last_name),
team_name = team_name,
team_name = case_when(
team_name == "fc-bayern-munchen" ~ "Bayern München",
team_name == "rasenballsport-leipzig" ~ "RB Leipzig",
team_name == "fc-schalke-04" ~ "Schalke 04",
team_name == "hertha-bsc" ~ "Hertha Berlin",
team_name == "1-fc-union-berlin" ~ "Union Berlin",
team_name == "fortuna-dusseldorf" ~ "Fortuna Düsseldorf",
team_name == "bayer-04-leverkusen" ~ "Bayer Leverkusen",
team_name == "sv-werder-bremen" ~ "Werder Bremen",
team_name == "borussia-monchengladbach" ~ "Borussia Mönchengladbach",
team_name == "tsg-1899-hoffenheim" ~ "Hoffenheim",
TRUE ~ str_replace_all(team_name, "-", " ") %>% stringr::str_to_title()),
season = season) %>%
arrange(desc(min_perc))
return(all_team_minutes)
}
# ALL TEAMS AT ONCE, WILL TAKE A WHILE:
age_utility_df_ALL <- pmap(list(team_links_df$team_name,
team_links_df$team_num,
team_links_df$season,
2160),
.f = buli_age_utility_info)
buli_age_utility_df <- age_utility_df_ALL %>%
reduce(rbind)
## save
saveRDS(buli_age_utility_df, file = glue("{here::here()}/data/buli_age_utility_df_MD24_1920.RDS"))
View(age_utility_df_ALL)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse, polite, scales, ggimage, rvest,
glue, extrafont, showtext, ggrepel, magick,
ggforce, lubridate, cowplot, patchwork, rlang)
loadfonts()
add_logo <- function(plot_path, logo_path, logo_position, logo_scale = 10){
# Requires magick R Package https://github.com/ropensci/magick
# Useful error message for logo position
if (!logo_position %in% c("top right", "top left", "bottom right", "bottom left")) {
stop("Error Message: Uh oh! Logo Position not recognized\n  Try: logo_positon = 'top left', 'top right', 'bottom left', or 'bottom right'")
}
# read in raw images
plot <- magick::image_read(plot_path)
logo_raw <- magick::image_read(logo_path)
# get dimensions of plot for scaling
plot_height <- magick::image_info(plot)$height
plot_width <- magick::image_info(plot)$width
# default scale to 1/10th width of plot
# Can change with logo_scale
logo <- magick::image_scale(logo_raw, as.character(plot_width/logo_scale))
# Get width of logo
logo_width <- magick::image_info(logo)$width
logo_height <- magick::image_info(logo)$height
# Set position of logo
# Position starts at 0,0 at top left
# Using 0.01 for 1% - aesthetic padding
if (logo_position == "top right") {
x_pos = plot_width - logo_width - 0.01 * plot_width
y_pos = 0.01 * plot_height
} else if (logo_position == "top left") {
x_pos = 0.01 * plot_width
y_pos = 0.01 * plot_height
} else if (logo_position == "bottom right") {
x_pos = plot_width - logo_width - 0.01 * plot_width
y_pos = plot_height - logo_height - 0.01 * plot_height
} else if (logo_position == "bottom left") {
x_pos = 0.01 * plot_width
y_pos = plot_height - logo_height - 0.01 * plot_height
}
# Compose the actual overlay
magick::image_composite(plot, logo, offset = paste0("+", x_pos, "+", y_pos))
}
tategaki <- function(x){
x <- chartr("ー", "丨", x) # 長音符の処理
x <- strsplit(split="", x)
sapply(x, paste, collapse="\n")
}
tategaki_alt <- function(x){
x <- stringr::str_replace_all(x, "ー", "丨") # 長音符の処理
stringr::str_wrap(x, width = 1)
}
session <- bow("https://www.transfermarkt.com/fc-tokyo/leistungsdaten/verein/6631/plus/0?reldata=JAP1%262018")
print(session)
# grab name from photo element instead
result_name <- scrape(session) %>%
html_nodes("#yw1 .bilderrahmen-fixed") %>%
html_attr("title")
# grab age
result_age <- scrape(session) %>%
html_nodes(".posrela+ .zentriert") %>%
html_text()
# grab minutes played in league
result_mins <- scrape(session) %>%
html_nodes("td.rechts") %>%
html_text()
knitr::opts_chunk$set(echo = TRUE)
session <- bow("https://www.transfermarkt.com/fc-tokyo/kader/verein/6631/plus/1/galerie/0?saison_id=2018")
result_name2 <- scrape(session) %>%
html_nodes("#yw1 .bilderrahmen-fixed") %>%
html_attr("title")
result_bday <- scrape(session) %>%
html_nodes(".posrela+ .zentriert") %>%
html_text()
result_joinedteam <- scrape(session) %>%
html_nodes("td:nth-child(8)") %>%
html_text()
result_leaveteam <- scrape(session) %>%
html_nodes("td:nth-child(10)") %>%
html_text()
# place each vector into list
resultados <- list(result_name, result_age, result_mins)
col_name <- c("name", "age", "minutes")
results_comb <- resultados %>%
reduce(cbind) %>%
as_tibble() %>%
set_names(col_name)
## join + bday
resultados2 <- list(result_name2, result_bday,
result_joinedteam, result_leaveteam)
col_name2 <- c("name", "bday", "join", "leave")
results_comb2 <- resultados2 %>%
reduce(cbind) %>%
as_tibble() %>%
set_names(col_name2)
## combine BOTH
results_comb <- results_comb %>%
left_join(results_comb2)
# fix "strings" into proper formats, calculate % of minutes appeared
tokyo_minutes <- results_comb %>%
mutate(age = as.numeric(age),
minutes = minutes %>%
str_replace("\\.", "") %>%
str_replace("'", "") %>%
as.numeric(),
min_perc = (minutes / 3060) %>% round(digits = 3),
bday = str_replace_all(bday, "\\(.*\\)", "") %>% mdy(),
join = join %>% mdy(),
join_age = case_when(
name == "Hirotaka Mita" ~ 29,
TRUE ~ interval(bday, join) / years(1)),
age_now = case_when(
name == "Takefusa Kubo" ~ 17,
TRUE ~ interval(bday, Sys.Date()) / years(1))) %>%
filter(!is.na(minutes)) %>%
separate(name, into = c("first_name", "last_name"),
sep = " ", fill = "left") %>%
mutate(join_age = case_when(
last_name == "Oh" ~ 29,
TRUE ~ join_age),
fname = if_else(!is.na(first_name),
str_extract(first_name, "[A-Z]{1}"),
""),
player = case_when(
!is.na(first_name) ~ glue("{fname}. {last_name}"),
TRUE ~ last_name),
team_name = "FC Tokyo") %>%
arrange(desc(min_perc))
glimpse(tokyo_minutes)
saveRDS(tokyo_minutes, here::here("data/FCTokyo_2019_age_utility_df.RDS"))
# font_add_google("Noto Sans", "Noto Sans")
# showtext_auto()
# rectanglular highlight for players in their prime:
rect_df <- data.frame(
xmin = 25, xmax = 29,
ymin = 0, ymax = 1
)
fctokyo_plot <- tokyo_minutes %>%
ggplot(aes(x = age_now, y = min_perc)) +
geom_vline(xintercept = 25, alpha = 0.4, color = "grey20") +
geom_hline(yintercept = 0.5, alpha = 0.4, color = "grey20") +
geom_rect(data = rect_df,
aes(x = NULL, y = NULL,
xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax),
fill = "#271672", alpha = 0.4) +
geom_link(aes(x = join_age, xend = age_now,
y = min_perc, yend = min_perc,
alpha = stat(index)),
color = "#DD2220", size = 1.75) +
geom_point(aes(x = age_now), color = "#DD2220", size = 3.5) +
geom_text_repel(
aes(label = player),
nudge_y = 0.01,
seed = 6) +
annotate("text", x = 27, y = 1.055,
size = 5.5, fontface = "bold",
family = "Yu Mincho Demibold",
label = "ピーク年齢", color = "grey20") +
scale_y_continuous(
expand = c(0.01, 0),
limits = c(0, 1.08),
breaks = seq(0, 1, by = 0.2),
labels = percent_format()) +
scale_x_continuous(
limits = c(16, 33),
breaks = seq(18, 34, by = 2)) +
labs(
x = "年齢",
y = tategaki_alt("出場時間 (%)"),
title = "FC東京: 年齢-出場時間",
subtitle = "J-League 2019 Season (100% = 3060分)") +
theme_bw() +
theme(
text = element_text(family = "Yu Mincho Demibold"),
panel.border = element_blank(),
plot.title = element_text(color = "#271672", size = 20, face = "bold"),
plot.subtitle = element_text(color = "#DD2220", size = 18),
plot.caption = element_text(size = 14),
panel.grid.minor = element_blank(),
axis.title.y = element_text(angle = 0, vjust= 0.5),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
axis.ticks = element_blank(),
legend.position = "none")
fctokyo_plot
View(fctokyo_plot)
